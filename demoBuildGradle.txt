apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    defaultConfig {
        applicationId "com.boohee.*"
		
		applicationId "com" // 这里设置了com作为默认包名,对应使用下面的buildTypes--xx--applicationIdSuffix
		
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
        
        multiDexEnabled true// dex突破65535的限制
        
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]// 默认是umeng的渠道
    }

    lintOptions {
        abortOnError false//lint时候终止错误上报,防止编译的时候莫名的失败 
    }

    signingConfigs {
        debug {
            // No debug config
        }

        release {
            storeFile file("../yourapp.keystore")
            storePassword "your password"
            keyAlias "your alias"
            keyPassword "your password"
			
			
			storeFile file(STORE_FILE_PATH)
			storePassword STORE_PASSWORD
			keyAlias KEY_ALIAS
			keyPassword KEY_PASSWORD
    
        }
    }

    buildTypes {//build类型  
        debug {
            
            buildConfigField "boolean", "LOG_DEBUG", "true"// 显示Log
			applicationIdSuffix '.kale.debug' // 设置debug时的包名为com.kale.debug
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            
            buildConfigField "boolean", "LOG_DEBUG", "false"// 不显示Log
			applicationIdSuffix '.kale.gradle' // 设置release时的包名为com.kale.gradle
            minifyEnabled true
            zipAlignEnabled true
            
            shrinkResources true// 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    	// 输出apk名称为boohee_v1.0_2015-01-15_wandoujia.apk
                        def fileName = "boohee_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }

    // 友盟多渠道打包
    productFlavors {
        wandoujia {}
        _360 {}
        baidu {}
        xiaomi {}
        tencent {}
        taobao {}
        ...
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
	
	packagingOptions {  //使用 packagingOptions 配置的 exclude 语句删除a.jar与b.jar的重复文件
		exclude 'META-INF/ASL2.0'//排除一些文件  
		exclude 'META-INF/LICENSE'  
		exclude 'META-INF/NOTICE'  
		exclude 'META-INF/MANIFEST.MF'  
	} 
}

repositories {
	flatDir {
		dirs 'libs' //this way we can find the .aar file in libs folder
	}
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.jakewharton:butterknife:6.0.0'
	compile(name:'aar的名字（不用加后缀）', ext:'aar')
	compile project(':LuaViewSDK')
    ...
}