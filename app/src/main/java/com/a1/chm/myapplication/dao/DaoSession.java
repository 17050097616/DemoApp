package com.a1.chm.myapplication.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.a1.chm.myapplication.dao.Author;
import com.a1.chm.myapplication.dao.Post;
import com.a1.chm.myapplication.dao.ScoreBean;
import com.a1.chm.myapplication.dao.StudentMsgBean;
import com.a1.chm.myapplication.dao.Test;
import com.a1.chm.myapplication.dao.Test1;

import com.a1.chm.myapplication.dao.AuthorDao;
import com.a1.chm.myapplication.dao.PostDao;
import com.a1.chm.myapplication.dao.ScoreBeanDao;
import com.a1.chm.myapplication.dao.StudentMsgBeanDao;
import com.a1.chm.myapplication.dao.TestDao;
import com.a1.chm.myapplication.dao.Test1Dao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig authorDaoConfig;
    private final DaoConfig postDaoConfig;
    private final DaoConfig scoreBeanDaoConfig;
    private final DaoConfig studentMsgBeanDaoConfig;
    private final DaoConfig testDaoConfig;
    private final DaoConfig test1DaoConfig;

    private final AuthorDao authorDao;
    private final PostDao postDao;
    private final ScoreBeanDao scoreBeanDao;
    private final StudentMsgBeanDao studentMsgBeanDao;
    private final TestDao testDao;
    private final Test1Dao test1Dao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        authorDaoConfig = daoConfigMap.get(AuthorDao.class).clone();
        authorDaoConfig.initIdentityScope(type);

        postDaoConfig = daoConfigMap.get(PostDao.class).clone();
        postDaoConfig.initIdentityScope(type);

        scoreBeanDaoConfig = daoConfigMap.get(ScoreBeanDao.class).clone();
        scoreBeanDaoConfig.initIdentityScope(type);

        studentMsgBeanDaoConfig = daoConfigMap.get(StudentMsgBeanDao.class).clone();
        studentMsgBeanDaoConfig.initIdentityScope(type);

        testDaoConfig = daoConfigMap.get(TestDao.class).clone();
        testDaoConfig.initIdentityScope(type);

        test1DaoConfig = daoConfigMap.get(Test1Dao.class).clone();
        test1DaoConfig.initIdentityScope(type);

        authorDao = new AuthorDao(authorDaoConfig, this);
        postDao = new PostDao(postDaoConfig, this);
        scoreBeanDao = new ScoreBeanDao(scoreBeanDaoConfig, this);
        studentMsgBeanDao = new StudentMsgBeanDao(studentMsgBeanDaoConfig, this);
        testDao = new TestDao(testDaoConfig, this);
        test1Dao = new Test1Dao(test1DaoConfig, this);

        registerDao(Author.class, authorDao);
        registerDao(Post.class, postDao);
        registerDao(ScoreBean.class, scoreBeanDao);
        registerDao(StudentMsgBean.class, studentMsgBeanDao);
        registerDao(Test.class, testDao);
        registerDao(Test1.class, test1Dao);
    }
    
    public void clear() {
        authorDaoConfig.clearIdentityScope();
        postDaoConfig.clearIdentityScope();
        scoreBeanDaoConfig.clearIdentityScope();
        studentMsgBeanDaoConfig.clearIdentityScope();
        testDaoConfig.clearIdentityScope();
        test1DaoConfig.clearIdentityScope();
    }

    public AuthorDao getAuthorDao() {
        return authorDao;
    }

    public PostDao getPostDao() {
        return postDao;
    }

    public ScoreBeanDao getScoreBeanDao() {
        return scoreBeanDao;
    }

    public StudentMsgBeanDao getStudentMsgBeanDao() {
        return studentMsgBeanDao;
    }

    public TestDao getTestDao() {
        return testDao;
    }

    public Test1Dao getTest1Dao() {
        return test1Dao;
    }

}
